* {
  margin: 0;
  padding: 0;
  font-family: "Poppins", sans-serif;
}

#banner {
  background-image: linear-gradient(rgba(0, 0, 0, 0.5), #009688),
    url("./images/banner.jpg");
  background-size: cover;
  background-position: center;
  height: 100vh;
}

.logo {
  width: 140px;
  position: absolute;
  top: 4%;
  left: 10%;
}

.banner-text {
  text-align: center;
  color: #fff;
  padding-top: 180px;
}

.banner-text h1 {
  font-size: 130px;
  font-family: "Kaushan Script", cursive;
}

.banner-text p {
  font-size: 20px;
  font-style: italic;
}

.banner-btn {
  margin: 70px auto 0;
}

.banner-btn a {
  width: 150px;
  border: 0.5px solid #fff;
  color: #fff;
  margin: 0 10px;
  padding: 12px 0;
  display: inline-block;
  text-decoration: none;
  position: relative;
  z-index: 1;
  transition: color 0.6s;
}

.banner-btn a span {
  width: 0;
  height: 100%;
  background: #fff;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: 0.6s;
}

.banner-btn a:hover span {
  width: 100%;
}

.banner-btn a:hover {
  color: #000;
}

#sideNav {
  width: 250px;
  height: 100vh;
  background: #009688;
  position: fixed;
  top: 0;
  right: -250px;
  z-index: 2;
  transition: 0.5s;
}

#sideNav ul li {
  list-style: none;
  margin: 50px 20px;
}

#sideNav ul li a {
  text-decoration: none;
  color: white;
}

#menuBtn {
  width: 50px;
  height: 50px;
  background: #009688;
  text-align: center;
  position: fixed;
  top: 20px;
  right: 30px;
  z-index: 3;
  cursor: pointer;
  border-radius: 3px;
}

#menuBtn img {
  width: 20px;
  margin-top: 15px;
}

/* features */
#feature {
  width: 100%;
  padding: 70px 0;
}

.title-text {
  text-align: center;
  padding-bottom: 70px;
}

.title-text p {
  margin: auto;
  font-size: 20px;
  color: #009688;
  font-weight: bold;
  position: relative;
  z-index: 1;
  display: inline-block;
}

.title-text p::after {
  content: "";
  width: 50px;
  height: 30;
  background: linear-gradient(#019587, #fff);
  position: absolute;
  top: -20px;
  left: 0;
  z-index: -1;
  transform: rotate(10deg);
  border-top-left-radius: 35px;
  border-bottom-right-radius: 35px;
}

.title-text h1 {
  font-size: 50px;
}

.feature-box {
  width: 80%;
  margin: auto;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  text-align: center;
}

.features {
  flex-basis: 50%;
}

.features-img {
  flex-basis: 50%;
  margin: auto;
}

.features-img img {
  width: 70%;
  border-radius: 10px;
}

.features h1 {
  text-align: left;
  margin-bottom: 10px;
  font-weight: 100;
  color: #009688;
}

.feature-desc {
  display: flex;
  align-items: center;
  margin-bottom: 40px;
}

.feature-icon .fa-solid {
  width: 50px;
  height: 50px;
  font-size: 30px;
  line-height: 50px;
  color: #009688;
  border: 1px solid #009688;
  border-radius: 8px;
}

.feature-text p {
  padding: 0 20px;
  text-align: initial;
}

#services {
  width: 100%;
  padding: 70px 0;
  background: #efefef;
}

.service-box {
  width: 80%;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  margin: auto;
}

.single-service {
  flex-basis: 48%;
  text-align: center;
  margin-bottom: 20px;
  /* color: #fff; */
  position: relative;
}

.single-service img {
  width: 100%;
  border-radius: 7px;
}

.overlay {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  background: linear-gradient(rgba(0, 0, 0, 0.5), #009688);
  opacity: 0;
  cursor: pointer;
  transition: 1s;
}

.single-service:hover .overlay {
  opacity: 1;
}

.service-desc {
  color: #ffffff;
  width: 80%;
  position: absolute;
  bottom: 0;
  left: 50%;
  opacity: 0;
  /* left 50% will move the element exactly at the center of the main container where this element belongs! BUT translateX(50%) will move the element right exactly to 50% of its width,and NOT at the center of the whole Container element! */
  transform: translateX(-50%);
  /* transition: 1s; */
}

hr {
  background-color: #fff;
  height: 2px;
  border: 0;
  /* Specifying auto as the second parameter basically tells the browser to automatically determine the left and right margins itself, which it does by setting them equally. It guarantees that the left and right margins will be set to the same size. */
  margin: 15px auto;
  width: 60%;
}

.service-desc p {
  font-size: 14px;
}

.single-service:hover .service-desc {
  /* z-index: 1;
transition: 0.6s; */
  bottom: 40%;
  opacity: 1;
}

/* TESTIMONIAL */

#testimonial {
  width: 100%;
  padding: 70px 0;
}

.testimonial-row {
  width: 80%;
  margin: auto;
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  flex-wrap: wrap;
}

.testimonial-col {
  flex-basis: 28%;
  padding: 10px;
  margin-bottom: 5px;
  border-radius: 5px;
  box-shadow: 0px 10px 20px 3px #00968814;
  cursor: pointer;
  transition: transform 0.5s;
}

.testimonial-col p {
  font-size: 14px;
}

.user {
  display: flex;
  align-items: center;
  margin: 20px 0;
}

.user img {
  width: 40px;
  margin-right: 20px;
  border-radius: 3px;
}

.user-info i {
  color: #00acee;
  margin-left: 15px;
  font-size: 20px;
}

.user-info small {
  color: #009688;
}

.testimonial-col:hover {
  transform: translateY(-7px);
}

/* Footer */
#footer {
  padding: 100px 0 20px;
  background: #efefef;
  position: relative;
}

.footer-row {
  width: 80%;
  /* When you have specified a width on the object that you have applied margin: 0 auto to, the object will sit centrally within it's parent container.
Specifying auto as the second parameter basically tells the browser to automatically determine the left and right margins itself, which it does by setting them equally. It guarantees that the left and right margins will be set to the same size. The first parameter 0 indicates that the top and bottom margins will both be set to 0. */
  margin: 0 auto;
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  position: relative;
}

.footer-left,
.footer-right {
  flex-basis: 45%;
  padding: 10px;
  margin-bottom: 20px;
}

.footer-right {
  /* The text-align property specifies the horizontal alignment of text in an element. */
  text-align: right;
}

.footer-row h1 {
  margin: 10px 0;
}

.footer-row p {
  /* The line-height CSS property sets the height of a line box. It's commonly used to set the distance between lines of text. On block-level elements, it specifies the minimum height of line boxes within the element. On non-replaced inline elements, it specifies the height that is used to calculate line box height. */
  line-height: 35px;
}

.footer-left i,
.footer-right i {
  font-size: 15px;
  color: #009688;
  margin: 10px;
}

.footer-image {
  max-width: 370px;
  opacity: 0.2;
  position: absolute;
  left: 50%;
  top: 35%;
  transform: translate(-50%, -50%); /* to do */
}

@media screen and (max-width: 770px) {
  .banner-text h1 {
    font-size: 44px;
  }

  .banner-btn a {
    display: block;
    margin: 20px auto;
  }

  .title-text h1 {
    font-size: 35px;
  }

  .features {
    flex-basis: 100%;
  }

  .features-img {
    flex-basis: 100%;
  }

  .features-img img {
    width: 100%;
  }

  .single-service {
    flex-basis: 100%;
    margin-bottom: 30px;
  }

  .service-desc p {
    font-size: 12px;
  }

  hr {
    margin: 5px auto;
  }

  .single-service:hover .service-desc {
    bottom: 25% !important;
  }

  .testimonial-col {
    flex-basis: 100%;
  }
}
